<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on 磊子的菜园子</title><link>https://blog.humblex.top/tags/java/</link><description>Recent content in Java on 磊子的菜园子</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>hzleii@outlook.com (磊子)</managingEditor><webMaster>hzleii@outlook.com (磊子)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 13 Jan 2021 22:15:45 +0000</lastBuildDate><atom:link href="https://blog.humblex.top/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>JVM面试问题总结</title><link>https://blog.humblex.top/jvm%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 13 Jan 2021 22:15:45 +0000</pubDate><author>hzleii@outlook.com (磊子)</author><guid>https://blog.humblex.top/jvm%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid><description>JVM 篇 1. 什么情况下会发生栈内存溢出 在 HotSpot 虚拟机中是不区分虚拟机栈和本地方法栈，栈是线程私有的，它的生命周期与线程相同，每个方法在执行的时候都会创</description></item><item><title>Java-插入排序</title><link>https://blog.humblex.top/java-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</link><pubDate>Wed, 22 Jul 2020 21:01:24 +0000</pubDate><author>hzleii@outlook.com (磊子)</author><guid>https://blog.humblex.top/java-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</guid><description>Java-插入排序（复杂度为O(n2) ） 简要说明 插入排序是一种最简单的排序方法，它的基本思想是从数组中逐个元素作为插入元素，和前面的进行比较</description></item><item><title>Java-选择排序</title><link>https://blog.humblex.top/java-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</link><pubDate>Wed, 22 Jul 2020 21:01:24 +0000</pubDate><author>hzleii@outlook.com (磊子)</author><guid>https://blog.humblex.top/java-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F/</guid><description>Java-选择排序（时间复杂度为O(n²) ） 简要说明 首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置。 再从剩余未排序元素中继续</description></item><item><title>SpringCloud底层服务之间是怎样互相调用的</title><link>https://blog.humblex.top/springcloud%E5%BA%95%E5%B1%82%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E6%98%AF%E6%80%8E%E6%A0%B7%E4%BA%92%E7%9B%B8%E8%B0%83%E7%94%A8%E7%9A%84/</link><pubDate>Mon, 20 Jul 2020 23:40:32 +0000</pubDate><author>hzleii@outlook.com (磊子)</author><guid>https://blog.humblex.top/springcloud%E5%BA%95%E5%B1%82%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E6%98%AF%E6%80%8E%E6%A0%B7%E4%BA%92%E7%9B%B8%E8%B0%83%E7%94%A8%E7%9A%84/</guid><description>SpringCloud底层服务之间是怎样互相调用的 ? 概述 毫无疑问，Spring Cloud是目前微服务架构领域的翘楚，无数的书籍博客都在讲解这</description></item><item><title>Java-快速排序</title><link>https://blog.humblex.top/java-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link><pubDate>Mon, 20 Jul 2020 23:39:24 +0000</pubDate><author>hzleii@outlook.com (磊子)</author><guid>https://blog.humblex.top/java-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid><description>Java-快速排序（时间复杂度：O(N*logN) ） 简要说明 快速排序由C. A. R. Hoare在1960年提出。 它的基本思想是：通过一趟排序将要排</description></item><item><title>Java-冒泡排序</title><link>https://blog.humblex.top/java-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</link><pubDate>Mon, 20 Jul 2020 21:00:24 +0000</pubDate><author>hzleii@outlook.com (磊子)</author><guid>https://blog.humblex.top/java-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/</guid><description>Java-冒泡排序 简要说明 依次比较两个相邻的元素 动图展示 代码展示 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 public class BubbleSort { public static void main(String[] args) { // TODO Auto-generated method stub int[] arr</description></item></channel></rss>